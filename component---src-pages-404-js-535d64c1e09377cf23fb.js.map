{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/seo.js","webpack:///./src/theme.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","theme","createMuiTheme","palette","primary","main","purple","secondary","grey","error","red","A400","background","default","useStyles","makeStyles","root","flexGrow","menuButton","marginRight","spacing","Header","siteTitle","classes","react_default","className","AppBar","position","Toolbar","Link","underline","href","variant","color","Box","fontFamily","Button","Layout","children","_505133889","ThemeProvider","CssBaseline","header","Date","getFullYear"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAaeQ,UARM,kBACnBJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KACEF,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,mBACXP,EAAAK,EAAAC,cAAA,uBACAN,EAAAK,EAAAC,cAAA,gQCGJ,SAASE,EAATC,GAAiD,IAAlCC,EAAkCD,EAAlCC,YAAaC,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,KAAML,EAASE,EAATF,MAC9BM,EADuCC,EAAAC,KACvCF,KAcFG,EAAkBN,GAAeG,EAAKI,aAAaP,YAEzD,OACEQ,EAAAb,EAAAC,cAACa,EAAAd,EAAD,CACEe,eAAgB,CACdT,QAEFJ,MAAOA,EACPc,cAAa,QAAUR,EAAKI,aAAaV,MACzCK,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAShB,GAEX,CACEiB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAAShB,GAEX,CACEe,KAAI,sBACJC,QAASP,IAEXU,OAAOd,KAKfJ,EAAImB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACNF,YAAW,IAUEF,kUClEAoB,EAjBDC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAMC,IAAO,MAEfC,UAAW,CACTF,KAAMG,IAAK,MAEbC,MAAO,CACLJ,KAAMK,IAAIC,MAEZC,WAAY,CACVC,QAAS,iECVTC,EAAYC,YAAW,SAAAd,GAAK,MAAK,CACrCe,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAalB,EAAMmB,QAAQ,IAE7BxC,MAAO,CACLqC,SAAU,MAIRI,EAAS,SAAAvC,GAAmB,IAAhBwC,EAAgBxC,EAAhBwC,UACVC,EAAUT,IAEhB,OACEU,EAAA9C,EAAAC,cAAA,OAAK8C,UAAWF,EAAQP,MACtBQ,EAAA9C,EAAAC,cAAC+C,EAAA,EAAD,CAAQC,SAAS,UACfH,EAAA9C,EAAAC,cAACiD,EAAA,EAAD,KACEJ,EAAA9C,EAAAC,cAACkD,EAAA,EAAD,CAAMC,UAAU,OAAOC,KAAK,IAAIC,QAAQ,KAAKC,MAAM,UAAUR,UAAWF,EAAQ3C,OAC9E4C,EAAA9C,EAAAC,cAACuD,EAAA,EAAD,CAAKC,WAAW,mBAAmBb,IAErCE,EAAA9C,EAAAC,cAACyD,EAAA,EAAD,CAAQH,MAAM,UAAUF,KAAK,iCAA7B,OACAP,EAAA9C,EAAAC,cAACyD,EAAA,EAAD,CAAQH,MAAM,UAAUF,KAAK,aAA7B,eAWVV,EAAOrB,aAAe,CACpBsB,UAAS,IAGID,eCIAgB,IA5BA,SAAAvD,GAAkB,IAAfwD,EAAexD,EAAfwD,SACVlD,EAAImD,EAAAnD,KAWV,OACEoC,EAAA9C,EAAAC,cAAC6D,EAAA,EAAD,CAAevC,MAAOA,GACpBuB,EAAA9C,EAAAC,cAAC8D,EAAA,EAAD,MACAjB,EAAA9C,EAAAC,cAAC+D,EAAD,CAAQpB,UAAWlC,EAAKF,KAAKI,aAAaV,QAClC4C,EAAA9C,EAAAC,cAAA,YAAO2D,GACPd,EAAA9C,EAAAC,cAAA,oBACK,IAAIgE,MAAOC,cADhB,IACgCxD,EAAKF,KAAKI,aAAaQ","file":"component---src-pages-404-js-535d64c1e09377cf23fb.js","sourcesContent":["import React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <SEO title=\"404: Not found\" />\r\n    <h1>NOT FOUND</h1>\r\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n  </Layout>\r\n)\r\n\r\nexport default NotFoundPage\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import { red, purple, grey } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: purple[900],\r\n    },\r\n    secondary: {\r\n      main: grey[800],\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Toolbar, Link, Button, IconButton, Box } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Header = ({ siteTitle }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Link underline=\"none\" href=\"/\" variant=\"h4\" color=\"inherit\" className={classes.title}>\r\n            <Box fontFamily=\"Caesar Dressing\">{siteTitle}</Box>\r\n          </Link> \r\n          <Button color=\"inherit\" href=\"https://acc.stacyvicknair.com\">ACC</Button>\r\n          <Button color=\"inherit\" href=\"/contact/\">Contact</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport theme from '../theme';\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          author\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n              <main>{children}</main>\r\n              <footer>\r\n                Â© {new Date().getFullYear()} {data.site.siteMetadata.author}\r\n              </footer>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}