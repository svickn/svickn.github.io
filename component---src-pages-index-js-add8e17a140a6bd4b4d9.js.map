{"version":3,"sources":["webpack:///./src/components/heroImage.js","webpack:///./src/pages/index.js","webpack:///./src/components/seo.js","webpack:///./src/theme.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["HeroImage","data","_2416007500","react_default","a","createElement","gatsby_image_default","style","position","left","top","width","height","fluid","heroImage","childImageSharp","useStyles","makeStyles","theme","_mainFeaturedPostCont","mainHero","backgroundColor","palette","grey","color","common","white","marginBottom","spacing","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","overlay","bottom","right","mainFeaturedPostContent","padding","breakpoints","up","paddingRight","paper","textAlign","primary","contrastText","IndexPage","classes","layout","seo","title","Paper","className","Grid","container","item","md","justify","Typography","component","variant","gutterBottom","paragraph","Button","href","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","createMuiTheme","main","purple","secondary","error","red","A400","background","default","root","flexGrow","menuButton","marginRight","Header","siteTitle","AppBar","Toolbar","Link","underline","Box","fontFamily","Layout","children","_505133889","ThemeProvider","CssBaseline","header","Date","getFullYear"],"mappings":"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","file":"component---src-pages-index-js-add8e17a140a6bd4b4d9.js","sourcesContent":["import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `useStaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\r\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nconst HeroImage = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      heroImage: file(relativePath: { eq: \"dragon.jpg\" }) {\r\n        childImageSharp {\r\n          fluid(maxWidth: 2000) {\r\n            ...GatsbyImageSharpFluid\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return <Img style={{\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n  }} fluid={data.heroImage.childImageSharp.fluid} />\r\n}\r\n\r\nexport default HeroImage\r\n","import React from \"react\"\r\nimport { Button, Grid, Link, Paper, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Layout from \"../components/layout\"\r\nimport HeroImage from \"../components/heroImage\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  mainHero: {\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.grey[800],\r\n    color: theme.palette.common.white,\r\n    marginBottom: theme.spacing(4),\r\n    backgroundImage: 'url(dragon.jpg)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    left: 0,\r\n  },\r\n  mainFeaturedPostContent: {\r\n    position: 'relative',\r\n    padding: theme.spacing(3),\r\n    [theme.breakpoints.up('md')]: {\r\n      padding: theme.spacing(6),\r\n      paddingRight: 0,\r\n    },\r\n    backgroundColor: 'rgba(0,0,0,.4)',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.primary.contrastText,\r\n    backgroundColor: 'rgba(0,0,0,.4)',\r\n  },\r\n}));\r\n\r\nconst IndexPage = () => {\r\n  const classes = useStyles();\r\n  return (\r\n  <Layout>\r\n    <SEO title=\"Home\" />\r\n    <Paper className={classes.mainHero}>\r\n      <HeroImage/>\r\n      <Grid container>\r\n        <Grid className={classes.mainFeaturedPostContent} item md={12}>\r\n          <Grid container justify=\"center\" spacing={2}>\r\n              <Grid md={6} item>\r\n                <Paper className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h3\" gutterBottom>\r\n              Stay awhile and listen\r\n            </Typography>\r\n            <Typography variant=\"h5\" paragraph>\r\n              This site is currently a work in progress. Stick around and we'll see where we go!\r\n            </Typography>\r\n            <Button variant=\"contained\" href=\"/contact/\" color=\"primary\">Contact me!</Button>\r\n                </Paper>\r\n              </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  </Layout>\r\n);}\r\n\r\nexport default IndexPage\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import { red, purple, grey } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: purple[900],\r\n    },\r\n    secondary: {\r\n      main: grey[800],\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Toolbar, Link, Button, IconButton, Box } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Header = ({ siteTitle }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Link underline=\"none\" href=\"/\" variant=\"h4\" color=\"inherit\" className={classes.title}>\r\n            <Box fontFamily=\"Caesar Dressing\">{siteTitle}</Box>\r\n          </Link> \r\n          <Button color=\"inherit\" href=\"/contact/\">Contact</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport theme from '../theme';\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          author\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n              <main>{children}</main>\r\n              <footer>\r\n                © {new Date().getFullYear()} {data.site.siteMetadata.author}\r\n              </footer>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}