{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/pages/contact.js","webpack:///./src/components/seo.js","webpack:///./src/theme.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["loader","enqueue","React","createContext","ContactPage","react_default","a","createElement","layout","seo","title","gatsby_link_default","to","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","theme","createMuiTheme","palette","primary","main","purple","secondary","grey","error","red","A400","background","default","useStyles","makeStyles","root","flexGrow","menuButton","marginRight","spacing","Header","siteTitle","classes","className","AppBar","position","Toolbar","Link","underline","href","variant","color","Box","fontFamily","Button","Layout","children","_505133889","ThemeProvider","CssBaseline","header","Date","getFullYear","m","module","exports","require","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"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","file":"component---src-pages-contact-js-9d2064a5b458dffd62aa.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst ContactPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Contact\" />\r\n    <h1>Contact me!</h1>\r\n    <p>You can find me around...</p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport default ContactPage\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import { red, purple, grey } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: purple[900],\r\n    },\r\n    secondary: {\r\n      main: grey[800],\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Toolbar, Link, Button, IconButton, Box } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Header = ({ siteTitle }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Link underline=\"none\" href=\"/\" variant=\"h4\" color=\"inherit\" className={classes.title}>\r\n            <Box fontFamily=\"Caesar Dressing\">{siteTitle}</Box>\r\n          </Link> \r\n          <Button color=\"inherit\" href=\"/contact/\">Contact</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport theme from '../theme';\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          author\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n              <main>{children}</main>\r\n              <footer>\r\n                © {new Date().getFullYear()} {data.site.siteMetadata.author}\r\n              </footer>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}